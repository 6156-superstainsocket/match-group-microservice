openapi: 3.0.3
info:
  title: Match Group Microservice API
  version: 1.0.0
  description: Match Group Microservice provides everything about groups
paths:
  /api/groups:
    get:
      operationId: groups_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - groups
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/groups/{gid}/users:
    get:
      operationId: groups_users_list
      parameters:
      - in: path
        name: gid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - groups
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserGroupList'
          description: ''
  /api/groups/{gid}/users/{uid}:
    get:
      operationId: groups_users_retrieve
      parameters:
      - in: path
        name: gid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    post:
      operationId: groups_users_create
      parameters:
      - in: path
        name: gid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    put:
      operationId: groups_users_update
      parameters:
      - in: path
        name: gid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    delete:
      operationId: groups_users_destroy
      parameters:
      - in: path
        name: gid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/groups/{id}:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/{id}/tags:
    get:
      operationId: groups_tags_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
  /api/likes/:
    put:
      operationId: likes_update
      tags:
      - likes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/tags/batch:
    post:
      operationId: tags_batch_create
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagBatch'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
components:
  schemas:
    Group:
      type: object
      description: Adds nested create feature
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 100
        icon_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        allow_without_approval:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/PatchedTag'
        admin_user_id:
          type: integer
          readOnly: true
      required:
      - admin_user_id
      - description
      - icon_id
      - id
      - name
      - tags
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedUserGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    PatchedGroup:
      type: object
      description: Adds nested create feature
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 100
        icon_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        allow_without_approval:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/PatchedTag'
        admin_user_id:
          type: integer
          readOnly: true
    PatchedTag:
      type: object
      description: Adds nested create feature
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 100
        icon_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    Tag:
      type: object
      description: Adds nested create feature
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 100
        icon_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - description
      - icon_id
      - id
      - name
    TagBatch:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
      required:
      - id
    UserGroup:
      type: object
      properties:
        user:
          type: string
          readOnly: true
        user_approved:
          type: boolean
        admin_approved:
          type: boolean
        group:
          type: integer
      required:
      - group
      - user
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
